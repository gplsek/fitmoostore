<?php
function fitmoo_checkout_menu() {
  $items = array();


  $items['fitmoo/checkout/%/%/%'] = array(
    'page callback' => '_create_order',
    'page arguments' => array(2,3,4),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  
  $items['userlogin/%'] = array(
    'page callback' => 'fitmoo_checkout_userlogin',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['admin/config/commissions'] = array(
  'title' => 'Set Commisions',
  'description' => 'Manage commision amount',
  'page callback' => 'drupal_get_form',
  'page arguments' => array('fitmoo_checkout_commisions'),
  'access arguments' => array('access site-wide contact form'),
  'type' => MENU_NORMAL_ITEM,
  );


  return $items;
}

function fitmoo_checkout_userlogin($sessionID){
	global $user;

	$result = db_select('sessions', 's')
	    ->fields('s', array('uid'))
	    ->condition('s.sid', $sessionID)
	    ->execute()
	    ->fetchAssoc();
	
	if($result){
		$uid = $result['uid'];
		
		$user = user_load($uid);
		drupal_session_regenerate();
	
		drupal_goto('checkout');
	}else{
		
		//invalid user goaway
		
	}
	
	
	
}

function _create_order($id,$uid,$qty = 1){
	global $user;
	$user = user_load($uid);
	drupal_session_regenerate();
$product_id = 1;
// Create the new order in checkout; you might also check first to
// see if your user already has an order to use instead of a new one.
$order = commerce_order_new($user->uid, 'checkout_checkout');

// Save the order to get its ID.
commerce_order_save($order);

// Load whatever product represents the item the customer will be
// paying for and create a line item for it.
//commerce_product_line_item_new(product,quantity,order_id)
$product = commerce_product_load($product_id);
$line_item = commerce_product_line_item_new($product, $qty, $order->order_id);

// Save the line item to get its ID.
commerce_line_item_save($line_item);

// Add the line item to the order using fago's rockin' wrapper.
$order_wrapper = entity_metadata_wrapper('commerce_order', $order);
$order_wrapper->commerce_line_items[] = $line_item;

// Save the order again to update its line item reference field.
commerce_order_save($order);

// Redirect to the order's checkout form. Obviously, if this were a
// form submit handler, you'd just set $form_state['redirect'].
drupal_goto('checkout/' . $order->order_id);

}


function fitmoo_checkout_commisions(){
	
	$form['info'] = array(
		'#type'=> 'item',
		 '#markup'=> t('Set percentage splits'),
		
	);
	
    $form['seller'] = array(
    '#type' => 'textfield',
	'#size' => 10,
    '#title' => t('Seller %'),
    '#default_value' => variable_get("seller_perc", ""),
    
    );
    $form['buyer'] = array(
    '#type' => 'textfield',
	'#size' => 10,
    '#title' => t('Buer %'),
    '#default_value' => variable_get("buyer_perc", ""),
    
    );
    $form['fitmoo'] = array(
    '#type' => 'textfield',
	'#size' => 10,
    '#title' => t('Fitmoo %'),
    '#default_value' => variable_get("fitmoo_perc", ""),
    
    );
	
    $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Update'),
    );
 
 
    return $form;
}

function fitmoo_checkout_commisions_submit($form, &$form_state) {
 if ($form_state['values']['seller']) {
  
   variable_set("seller_perc", $form_state['values']['seller']);
   variable_set("buyer_perc", $form_state['values']['buyer']);
   variable_set("fitmoo_perc", $form_state['values']['fitmoo']);
   drupal_set_message(t("Updated Commission Percentages."));
  
 }
 return $form;
}




